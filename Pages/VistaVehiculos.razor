@page "/vistavehiculos"
@inject IVehiculos Vehiculos
@inject IJSRuntime js
@inject IComentario Comen

<div class="row justify-content-center">
    <div class="col-md-8 text-center">
        <h1 class="alert alert-info">Vista de Vehículos</h1>
        @if(loading == true){
            <div class="spinner-border text-primary" style="width: 7rem; height: 7rem; margin-top:10rem;" role="status">
              <span class="visually-hidden"></span>
            </div>
        }
    </div>
</div>

@if(loading == false){
  <div class="row">
    @if(lsVehiculos != null){
      @foreach (var item in lsVehiculos)
      { 
        <div class="col-12 col-sm-3">
          <MudCard Elevation="25">
            <MudCardContent>
              <MudGrid>
                @if(item.estado == 1){
                  <MudChip Label="true" Color="Color.Success" Size="Size.Medium" Class="mr-auto mud-elevation-25">Disponible</MudChip>
                }else{
                  <MudChip Label="true" Color="Color.Error" Size="Size.Medium" Class="mr-auto mud-elevation-25">No Disponible</MudChip>
                }
                <img src="@item.foto"  class="card-img-top" alt="..">
                <div class="card-body">
                  <h3 class="card-title text-center">@item.marca @item.modelo</h3>
                  <p class="card-text">
                    <table class="table tablePer">
                      <tbody>
                        <tr>
                          <th>Año:</th>
                          <td>@item.anio</td>    
                        </tr>
                        <tr>
                          <th>Matricula:</th>
                          <td>@item.matricula</td>  
                        </tr>
                      </tbody>
                    </table>
                    <h5 class="text-center" style="font-weight: bold;">DOP $@item.precio</h5>
                  </p>
                    <div class="text-center">
                      <button class="btn btn-success" data-bs-toggle="modal" @onclick="(()=>VerComentarios(item.id))"  data-bs-target="#divview"><i class="oi oi-eye"></i></button>
                      <a href="/registrarvehiculo/editarvehiculo/@item.id" class="btn btn-primary"><i class="oi oi-pencil"></i></a>
                      <button class="btn btn-danger" @onclick="(() => Delete(item.id))" ><i class="oi oi-trash"></i></button>
                    </div>
                </div>
              </MudGrid>
            </MudCardContent>
          </MudCard>
        </div> 
      }
    }
  </div>
}


<!-- Modal -->
<div class="modal fade" id="divview" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Comentarios de acerca del vehiculo</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>


          @foreach (var item in ComentarioVehiculo)
          {
              <div class="modal-body">
                  @if (@item.Comentario == "" || @item.Comentario == null)
                  {
                      <p >  No hay Comentarios </p>
                  }
                  <p class="alert alert-info">@item.Comentario</p>
              </div>
          }
      <div class="modal-footer">
          <input type="text" @bind-value="comentary" class="form-control"  aria-describedby="basic-addon3">
          <button type="button" class="btn btn-secondary" @onclick="(() => agregarcomentario(carroId))" data-bs-dismiss="modal">Agregar </button>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

      </div>
          
      </div>
          
  </div>
</div>

@code{
    public bool loading {get; set;} = true;
    List<VehiculosDb> lsVehiculos = new List<VehiculosDb>();
    List<ComentariosV> ComentarioVehiculo = new List<ComentariosV>();
    ComentariosV lsitacomentarios = new ComentariosV();
    public string comentary;
    public int carroId;

    protected async override Task OnInitializedAsync()
    {
        lsVehiculos = await Vehiculos.GetVehiculos();
        loading = false;
    }
    public void VerComentarios(int id)
    {
        carroId = id;
        ComentarioVehiculo = Comen.Buscar(id);

    }

    public void agregarcomentario(int id)
    {
        if (comentary.Trim() == "")
        {
            var msj = js.InvokeAsync<object>("msjAlert", "Tiene que escribir mas de una letras", "error");

        }
        else
        {
            lsitacomentarios.Comentario = comentary;
            lsitacomentarios.id_vehiculo = id;
            var result = Comen.Agregar(lsitacomentarios);
            if (result == true)
            {
                js.InvokeAsync<object>("msjAlert", "Comentario Agregado Correctamente", "success");
                comentary = "";
            }
        }



    }

    public async Task Delete(int id){
        var confimacion = await js.InvokeAsync<bool>("msjConfim", "Confimar", "Seguro de borrar el Vehículo?", "question");
        if(confimacion){
            if(id != 0){
                loading = true;
                await Vehiculos.DeleteVehiculo(id);
                await js.InvokeAsync<object>("msjAlert", "Eliminación Exitosa", "success");
                lsVehiculos = await Vehiculos.GetVehiculos();
                loading = false;
            }
        }
    }


    bool botonnes = true;

}            