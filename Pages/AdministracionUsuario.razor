@page "/administrarUsuario"
@inject IUsuario usuarios
@inject IJSRuntime js

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Administración de Usuarios</MudText>
<MudTabs Elevation="25" Color="Color.Transparent" Rounded="true" PanelClass="mt-6">
    <MudTabPanel Text="General">
    </MudTabPanel>
    <MudTabPanel Text="Seguridad">
        <div class="row justify-content-center mt-md-2">
            <div class="col-4">
                <EditForm Model="oUsuario">
                    <DataAnnotationsValidator/>
                    <MudCard>
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText>Credenciales</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudTextField T="string" @bind-Value="oUsuario.user_" Label="Usuario" Variant="Variant.Outlined" />
                                    <ValidationMessage For="() => oUsuario.user_"/>
                                </MudItem>
                                <MudItem xs="12">
                                    <MudTextField T="string" @bind-Value="oUsuario.pass" Label="Contraseña" Variant="Variant.Outlined" InputType="InputType.Password" @ref="pwField1" Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true" RequiredError="Se requiere contreseña!" />
                                    <ValidationMessage For="() => oUsuario.pass"/>
                                </MudItem>
                                <MudItem xs="12">
                                    <MudTextField T="string" @bind-Value="oUsuario.pass" Label="Confimar Contraseña" Variant="Variant.Outlined" InputType="InputType.Password" Validation="@(new Func<string, string>(PasswordMatch))" />
                                    <ValidationMessage For="() => oUsuario.pass"/>
                                </MudItem>
                            </MudGrid>
                        </MudCardContent>
                        <MudCardActions Class="pb-4 pl-4">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Guardar</MudButton>
                        </MudCardActions>
                    </MudCard>
                </EditForm>
            </div>
        </div> 
    </MudTabPanel>
</MudTabs>

@* @if(loading == false){
    <div class="row justify-content-center mt-md-2">
        <div class="col-4">
            <EditForm Model="oUsuario">
                <DataAnnotationsValidator/>
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText>Credenciales</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12">
                                <MudTextField T="string" @bind-Value="oUsuario.user_" Label="Usuario" Variant="Variant.Outlined" />
                                <ValidationMessage For="() => oUsuario.user_"/>
                            </MudItem>
                            <MudItem xs="12">
                                <MudTextField T="string" @bind-Value="oUsuario.pass" Label="Contraseña" Variant="Variant.Outlined" InputType="InputType.Password" @ref="pwField1" Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true" RequiredError="Se requiere contreseña!" />
                                <ValidationMessage For="() => oUsuario.pass"/>
                            </MudItem>
                            <MudItem xs="12">
                                <MudTextField T="string" @bind-Value="oUsuario.pass" Label="Confimar Contraseña" Variant="Variant.Outlined" InputType="InputType.Password" Validation="@(new Func<string, string>(PasswordMatch))" />
                                <ValidationMessage For="() => oUsuario.pass"/>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                    <MudCardActions Class="pb-4 pl-4">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Guardar</MudButton>
                    </MudCardActions>
                </MudCard>
            </EditForm>
        </div>
    </div> 
} *@

@code{
    public bool loading = false;
    UsuariosDb oUsuario = new UsuariosDb(); 


    MudTextField<string> pwField1;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Se requiere contraseña!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "La contraseña debe tener al menos una longitud de 8";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Las contraseñas no coinciden";
        return null;
    }

    private async Task GuardarDatos(){
        await usuarios.AddUsuarios(oUsuario);
        var msj = js.InvokeAsync<object>("msjAlert", "Registro Existo", "success");
    } 
}